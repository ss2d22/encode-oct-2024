"use strict";var a=require("../types.cjs"),t=require("../utils.cjs");const s="hana";exports.HANA_ID=s,exports.HanaModule=class{constructor(){this.moduleType=a.ModuleType.HOT_WALLET,this.productId=s,this.productName="Hana Wallet",this.productUrl="https://hanawallet.io/",this.productIcon="https://stellar.creit.tech/wallet-icons/hana.png"}async isAvailable(){return!!window.hanaWallet?.stellar}async getAddress(){return(async()=>{if(!window.hanaWallet?.stellar)throw new Error("Hana Wallet is not installed")})().then((()=>window.hanaWallet.stellar.getPublicKey())).then((a=>({address:a}))).catch((a=>{throw t.parseError(a)}))}async signTransaction(a,s){return(async()=>{if(!window.hanaWallet?.stellar)throw new Error("Hana Wallet is not installed")})().then((async()=>window.hanaWallet.stellar.signTransaction({xdr:a,accountToSign:s?.address,networkPassphrase:s?.networkPassphrase}))).then((a=>({signedTxXdr:a,signerAddress:s?.address}))).catch((a=>{throw t.parseError(a)}))}async signAuthEntry(a,s){return(async()=>{if(!window.hanaWallet?.stellar)throw new Error("Hana Wallet is not installed")})().then((async()=>window.hanaWallet.stellar.signAuthEntry({xdr:a,accountToSign:s?.address}))).then((a=>({signedAuthEntry:a,signerAddress:s?.address}))).catch((a=>{throw t.parseError(a)}))}async signMessage(){throw{code:-3,message:'Hana does not support the "signMessage" function'}}async getNetwork(){throw{code:-3,message:'Hana does not support the "getNetwork" function'}}};
//# sourceMappingURL=hana.module.cjs.map
